<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | G1BS.0N]]></title>
  <link href="http://taishin.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://taishin.github.com/"/>
  <updated>2013-03-14T23:31:00+09:00</updated>
  <id>http://taishin.github.com/</id>
  <author>
    <name><![CDATA[taishin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CloudStackへのログインをLDAP認証する]]></title>
    <link href="http://taishin.github.com/blog/2012/11/12/cloudstack-ldap/"/>
    <updated>2012-11-12T21:26:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/12/cloudstack-ldap</id>
    <content type="html"><![CDATA[<p>ClousStackのログインをLDAPにするには、APIからコマンドを実行しなければいけないようです。</p>

<p>APIのURL生成がかなりめんどくさいので、生成用のスクリプトを使わせてもらうことにします。<br>
<a href="http://www.creationline.com/blog/asako/1172">ここ</a>のスクリプトを使おうと思ったんですが、エンコード処理がうまくいかなかったので、
<a href="https://github.com/snumano/CloudStack-API/blob/master/generate-url.pl">ここ</a>のを使わせてもらうことにしました。</p>

<p>まず、</p>

<pre>
my $site = "http://*.*.*.*/client/api?";
</pre>


<p>の"*"を自分のサイトのIPアドレスに変更しておきます。</p>

<p>使い方はこんな感じです。</p>

<pre>
generate-url.pl -f 3 -u (コマンド) -a (APIキー) -s (Secretキー)
</pre>


<p>コマンドの作り方は、<a href="http://docs.cloudstack.org/CloudStack_Documentation/Administration_Guide%3A_CloudStack">Administrator Guide</a>に書いてあります。</p>

<p>組み合わせるとこんな感じになります。</p>

<pre>
generate-url.pl -a (APIキー) -s (Secretキー) -f 3 -u "command=ldapConfig&port=389&queryfilter=%28%26%28uid%3D%25u%29%29&searchbase=dc%3Dexample%2Cdc%3Dcom&hostname=(LDAPサーバのIPアドレス)&response=json"
</pre>


<p>成功すると、こんな応答が返ってきます。</p>

<pre>
{
   "ldapconfigresponse" : {
      "ldapconfig" : {
         "queryfilter" : "(&(uid=%u))",
         "hostname" : "LDAPサーバのIPアドレス",
         "port" : "false",
         "searchbase" : "dc=example,dc=com"
      }
   }
}
</pre>


<p>あと、MD5 hashに関するバグがあるようで、
<a href="https://cwiki.apache.org/CLOUDSTACK/cloudstack-3x-ldap-authentication.html#Cloudstack3.xLDAPAuthentication-DisablingMD5hash">Cloudstack 3.x LDAP Authentication - Disabling MD5 hash</a>の設定変更が必要になります。</p>

<p>/usr/share/cloud/management/webapps/client/scripts/sharedFunctions.js を</p>

<pre>var md5HashedLogin = false;</pre>


<p>に変更し、
CloudStackの再起動が必要になります。</p>

<pre>service cloud-management restart</pre>


<p>あらかじめローカルにユーザを作っておかないといけないようですし、LDAPサーバ障害時を考慮して、adminとか特定のユーザのみローカル認証にするとかもできないようです。</p>

<p>また、なんかトラブルの後、ログインできなくなることが多々あります。
その場合は、cloud-setup-managementコマンドを実行し、インストールし直すともとのローカル認証でログインできるようになります。(これが問題ないかどうかは分かりません･･･)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.04 では /etc/resolv.confが書き換えられる]]></title>
    <link href="http://taishin.github.com/blog/2012/11/12/resolvconf/"/>
    <updated>2012-11-12T21:23:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/12/resolvconf</id>
    <content type="html"><![CDATA[<p>Ubuntu12.04ではresolvconfという仕組みを使うらしい</p>

<ul>
<li><a href="https://sites.google.com/site/michinobumaeda/hardware-os/ubuntu-12-04-resolv-conf">ubuntu 12.04 で resolv.conf が書き換えられる</a></li>
<li><a href="http://www.stgraber.org/2012/02/24/dns-in-ubuntu-12-04/">DNS in Ubuntu 12.04</a></li>
</ul>


<p>/etc/resolvconf/resolv.conf.d/配下のファイルと、/etc/network/interfacesのdns-nameservers と dns-search から動的に/etc/resolv.confが生成されるようです。</p>

<p>/etc/resolvconf/resolv.conf.d/base に書くのが一般的みたいですが、
それだと/etc/network/interfaces 「dns-nameservers」 が上に来て優先されるみたいです。</p>

<p>chefで一括管理することを考えると、/etc/network/interfacesにはどう書かれるか分からないので、/etc/resolvconf/resolv.conf.d/headに書く方がいいかもしれないです。</p>

<p>resolv.confに反映させるには、resolvconfサービスの再起動が必要です。</p>

<pre>service resolvconf restart</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bind + OpenLDAP]]></title>
    <link href="http://taishin.github.com/blog/2012/11/04/bind-plus-openldap/"/>
    <updated>2012-11-04T10:18:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/04/bind-plus-openldap</id>
    <content type="html"><![CDATA[<p>BindのバックエンドDBをOpenLDAPにしてみる</p>

<p>OSはCentOS6.3</p>

<ul>
<li><p>bind-sdbをインストールする
{% codeblock %}</p>

<h1>sudo yum install bind-sdb</h1>

<p>{% endcodeblock %}</p></li>
<li><p>DNSzoneスキーマを組み込む</p></li>
</ul>


<p>/etc/openldap/slapd.conf に追加
{% codeblock %}
include /etc/openldap/schema/dnszone.schema
{% endcodeblock %}
* 構成はこんな感じ
{% codeblock %}
root - Hosts --- example.com ------------- @(SOA NS)</p>

<pre><code>          |                         |- server1(A)
          |                         |- www(CNAME)
          |
          |- 1.168.192.in-addr.arpa -- @(SOA NS)
                                    |- 1(PTR)
</code></pre>

<p>{% endcodeblock %}</p>

<p>LDIF
{% codeblock %}
dn: ou=Hosts,dc=example,dc=com
objectclass: organizationalUnit
objectclass: top
ou: Hosts</p>

<h1>正引き</h1>

<p>dn: ou=example.com,ou=Hosts,dc=example,dc=com
objectclass: organizationalUnit
objectclass: top
ou: example.com</p>

<p>dn: relativeDomainName=@,ou=example.com,ou=Hosts,dc=example,dc=com
dnsclass: IN
dnsttl: 86400
nsrecord: ns.example.com.
objectclass: dNSZone
objectclass: top
relativedomainname: @
soarecord: ns.example.com. root.example.com. 2012110303 28800 14400 3600000
 86400
zonename: example.com</p>

<p>dn: relativeDomainName=server1,ou=example.com,ou=Hosts,dc=example,dc=com
arecord: 192.168.1.1
dnsclass: IN
dnsttl: 3600
objectclass: dNSZone
objectclass: top
relativedomainname: server1
zonename: example.com</p>

<p>dn: relativeDomainName=www,ou=example.com,ou=Hosts,dc=example,dc=com
cnamerecord: server1
dnsclass: IN
dnsttl: 3600
objectclass: dNSZone
objectclass: top
relativedomainname: www
zonename: example.com</p>

<h1>逆引き</h1>

<p>dn: ou=1.168.192.in-addr.arpa,ou=Hosts,dc=example,dc=com
objectclass: organizationalUnit
objectclass: top
ou: 1.168.192.in-addr.arpa</p>

<p>dn: relativeDomainName=@,ou=1.168.192.in-addr.arpa,ou=Hosts,dc=example,dc=com
arecord: 255.255.255.0
dnsclass: IN
dnsttl: 86400
nsrecord: ns.example.com.
objectclass: dNSZone
objectclass: top
ptrrecord: example.com.
relativedomainname: @
soarecord: ns.example.com. root.example.com. 2012110302 28800 14400 3600000
 86400
zonename: 1.168.192.in-addr.arpa</p>

<p>dn: relativeDomainName=1,ou=1.168.192.in-addr.arpa,ou=Hosts,dc=example,dc=com
dnsclass: IN
dnsttl: 3600
objectclass: dNSZone
objectclass: top
ptrrecord: server1.example.com.
relativedomainname: 1
zonename: 1.168.192.in-addr.arpa
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
