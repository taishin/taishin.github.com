<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: zabbix | G1BS.0N]]></title>
  <link href="http://taishin.github.com/blog/categories/zabbix/atom.xml" rel="self"/>
  <link href="http://taishin.github.com/"/>
  <updated>2013-09-18T23:11:43+09:00</updated>
  <id>http://taishin.github.com/</id>
  <author>
    <name><![CDATA[taishin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zabbixでアラートメールを検知]]></title>
    <link href="http://taishin.github.com/blog/2013/09/18/zabbixmailcheck/"/>
    <updated>2013-09-18T21:51:00+09:00</updated>
    <id>http://taishin.github.com/blog/2013/09/18/zabbixmailcheck</id>
    <content type="html"><![CDATA[<ol>
<li>.forwardでスクリプトに渡す</li>
<li>RubyのMailライブラリでタイトルと本文を取得(mailalert.rb)</li>
<li>本文からホスト情報を取得し、該当ホストのトラッパーアイテムに内容を送信(mailalert.sh)</li>
</ol>


<p>2と3のスクリプトは一つでやるべきなんでしょうけど、bashだとメールのパースが面倒、rubyだと改行が入るとzabbix_senderでうまく送れず・・・</p>

<p>{% codeblock .forward}
"|/usr/bin/ruby /usr/lib/zabbix/alertscripts/mailalert.rb |/bin/sh
/usr/lib/zabbix/alertscripts/mailalert.sh"
{% endcodeblock %}</p>

<p>{% codeblock mailalert.rb lang:ruby %}</p>

<h1>!/usr/bin/ruby</h1>

<h1>受け取ったメールから、タイトルと本文を取得</h1>

<p>require 'mail'</p>

<p>message = STDIN.read
mail = Mail.read_from_string(message)</p>

<p>puts "Subject: " + mail.subject
puts ""
puts mail.body.to_s
{% endcodeblock %}</p>

<p>{% codeblock mailalert.rb lang:bash %}</p>

<h1>!/bin/sh</h1>

<h1>タイトルと本文をzabbix_senderでトラッパーに送信</h1>

<p>str=""</p>

<p>while read line; do
  str="$str\n$line"
done</p>

<p>host=<code>echo -e $str | awk '/Host/ {print $3}'</code> # メール本文からホスト情報
を取得</p>

<p>case $host in
  server1)     itemhost="server1" ;;    # どのホストに通知するかの定義
  server2)     itemhost="server2" ;;
  server3)     itemhost="server3" ;;
  *)               itemhost="zabbix-server" ;;      #未定義のものは
zabbix-server
esac</p>

<p>str=<code>echo -e $str</code></p>

<p>/usr/bin/zabbix_sender -s "$itemhost" -z localhost -k mail_check -o "$str"
{% endcodeblock %}</p>

<p>Zabbixの方はホストごとにmail_checkというZabbixトラッパーのアイテムを作成すれば、受信できます。<br/>
タイトルや本文の内容をもとにトリガーで通知できます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ThinReportsでZabbixのレポートを作成]]></title>
    <link href="http://taishin.github.com/blog/2013/04/20/zabbix-report/"/>
    <updated>2013-04-20T22:45:00+09:00</updated>
    <id>http://taishin.github.com/blog/2013/04/20/zabbix-report</id>
    <content type="html"><![CDATA[<p>Zabbixのスクリーン機能で、グラフの一覧表示なんかはできますが、
やっぱり提出用レポートとしては厳しいかと。</p>

<p>WordやExcelで毎回作るのもそれは手間だなーと思ってたら
<a href="http://www.thinreports.org/">ThinReports</a>というものを知ったので、
これで自動でレポート作れるようにしてみました。</p>

<p><a href="https://github.com/taishin/zabbxi_report">zabbix_report</a></p>

<p>表紙付きでいい感じにできました。</p>

<p>これはなかなかいいですね。</p>

<p>強いて言えば、出力がPDFなので、WordやExcelでできたら、細かいとこ修正できていいんですが・・・</p>

<p>{% img left /images/zabbix_report.png %}</p>
]]></content>
  </entry>
  
</feed>
