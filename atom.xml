<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[G1BS.0N]]></title>
  <link href="http://taishin.github.com/atom.xml" rel="self"/>
  <link href="http://taishin.github.com/"/>
  <updated>2013-02-09T22:26:36+09:00</updated>
  <id>http://taishin.github.com/</id>
  <author>
    <name><![CDATA[taishin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zabbix2.0でESXiのVMごとに監視してみる(2)]]></title>
    <link href="http://taishin.github.com/blog/2013/02/09/zabbixde/"/>
    <updated>2013-02-09T22:01:00+09:00</updated>
    <id>http://taishin.github.com/blog/2013/02/09/zabbixde</id>
    <content type="html"><![CDATA[<p><a href="http://taishin.github.com/blog/2012/11/11/zabbixde/">前回</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudStackへのログインをLDAP認証する]]></title>
    <link href="http://taishin.github.com/blog/2012/11/12/cloudstack-ldap/"/>
    <updated>2012-11-12T21:26:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/12/cloudstack-ldap</id>
    <content type="html"><![CDATA[<p>ClousStackのログインをLDAPにするには、APIからコマンドを実行しなければいけないようです。</p>

<p>APIのURL生成がかなりめんどくさいので、生成用のスクリプトを使わせてもらうことにします。<br>
<a href="http://www.creationline.com/blog/asako/1172">ここ</a>のスクリプトを使おうと思ったんですが、エンコード処理がうまくいかなかったので、
<a href="https://github.com/snumano/CloudStack-API/blob/master/generate-url.pl">ここ</a>のを使わせてもらうことにしました。</p>

<p>まず、</p>

<pre>
my $site = "http://*.*.*.*/client/api?";
</pre>


<p>の&#8221;*&#8221;を自分のサイトのIPアドレスに変更しておきます。</p>

<p>使い方はこんな感じです。</p>

<pre>
generate-url.pl -f 3 -u (コマンド) -a (APIキー) -s (Secretキー)
</pre>


<p>コマンドの作り方は、<a href="http://docs.cloudstack.org/CloudStack_Documentation/Administration_Guide%3A_CloudStack">Administrator Guide</a>に書いてあります。</p>

<p>組み合わせるとこんな感じになります。</p>

<pre>
generate-url.pl -a (APIキー) -s (Secretキー) -f 3 -u "command=ldapConfig&port=389&queryfilter=%28%26%28uid%3D%25u%29%29&searchbase=dc%3Dexample%2Cdc%3Dcom&hostname=(LDAPサーバのIPアドレス)&response=json"
</pre>


<p>成功すると、こんな応答が返ってきます。</p>

<pre>
{
   "ldapconfigresponse" : {
      "ldapconfig" : {
         "queryfilter" : "(&(uid=%u))",
         "hostname" : "LDAPサーバのIPアドレス",
         "port" : "false",
         "searchbase" : "dc=example,dc=com"
      }
   }
}
</pre>


<p>あと、MD5 hashに関するバグがあるようで、
<a href="https://cwiki.apache.org/CLOUDSTACK/cloudstack-3x-ldap-authentication.html#Cloudstack3.xLDAPAuthentication-DisablingMD5hash">Cloudstack 3.x LDAP Authentication - Disabling MD5 hash</a>の設定変更が必要になります。</p>

<p>/usr/share/cloud/management/webapps/client/scripts/sharedFunctions.js を</p>

<pre>var md5HashedLogin = false;</pre>


<p>に変更し、
CloudStackの再起動が必要になります。</p>

<pre>service cloud-management restart</pre>


<p>あらかじめローカルにユーザを作っておかないといけないようですし、LDAPサーバ障害時を考慮して、adminとか特定のユーザのみローカル認証にするとかもできないようです。</p>

<p>また、なんかトラブルの後、ログインできなくなることが多々あります。
その場合は、cloud-setup-managementコマンドを実行し、インストールし直すともとのローカル認証でログインできるようになります。(これが問題ないかどうかは分かりません･･･)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.04 では /etc/resolv.confが書き換えられる]]></title>
    <link href="http://taishin.github.com/blog/2012/11/12/resolvconf/"/>
    <updated>2012-11-12T21:23:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/12/resolvconf</id>
    <content type="html"><![CDATA[<p>Ubuntu12.04ではresolvconfという仕組みを使うらしい</p>

<ul>
<li><a href="https://sites.google.com/site/michinobumaeda/hardware-os/ubuntu-12-04-resolv-conf">ubuntu 12.04 で resolv.conf が書き換えられる</a></li>
<li><a href="http://www.stgraber.org/2012/02/24/dns-in-ubuntu-12-04/">DNS in Ubuntu 12.04</a></li>
</ul>


<p>/etc/resolvconf/resolv.conf.d/配下のファイルと、/etc/network/interfacesのdns-nameservers と dns-search から動的に/etc/resolv.confが生成されるようです。</p>

<p>/etc/resolvconf/resolv.conf.d/base に書くのが一般的みたいですが、
それだと/etc/network/interfaces 「dns-nameservers」 が上に来て優先されるみたいです。</p>

<p>chefで一括管理することを考えると、/etc/network/interfacesにはどう書かれるか分からないので、/etc/resolvconf/resolv.conf.d/headに書く方がいいかもしれないです。</p>

<p>resolv.confに反映させるには、resolvconfサービスの再起動が必要です。</p>

<pre>service resolvconf restart</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zabbix2.0でESXiのVMごとに監視してみる]]></title>
    <link href="http://taishin.github.com/blog/2012/11/11/zabbixde/"/>
    <updated>2012-11-11T14:03:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/11/zabbixde</id>
    <content type="html"><![CDATA[<p>vSphere APIを使えば、ESXiだけじゃなくて、VMごとのCPU、メモリなんかのステータスも取得てきます。
取得した値をZabbixに食わせて、Zabbixで監視してみます。
VMwareのサイトにPerlのSDKがありますが、書き方が分かりにくかったので、
今回はRubyのRbVmomiを使ってみます。</p>

<p><a href="https://github.com/rlane/rbvmomi">RbVmomi</a></p>

<p>まずはインストール</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install rbvmomi</span></code></pre></td></tr></table></div></figure>


<p>使い方</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rbvmomi&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでステータスが取れます。簡単です。<br>
取得する値は、
<a href="http://pubs.vmware.com/vsphere-51/index.jsp?topic=%2Fcom.vmware.wssdk.apiref.doc%2Fright-pane.html">VMware vSphere API Reference Documentation</a>
とか https://(vCenter)/mob
を参照します。</p>

<p>Zabbixへの取込み方は、
<a href="http://www.zabbix.com/forum/showthread.php?t=15691">ESXi 4.0 Hardware and Software Monitoring VMWare </a>
を参考にして、</p>

<blockquote><ol>
<li>取得した値をローカルにテキストで保存する</li>
<li>それをZabbix AgentのUserParameterで取得する</li>
</ol>
</blockquote>

<p>というやり方にしてみます。<br>
上記のサイトでは１つのファイルにしていますが、VMごとに取得したいので、
ついでに、ESXi、データストアのステータスも取得したいと思います。<br>
VM、ESXi、データストアそれぞれをZabbixに監視ホストとして登録しようと思うので、それぞれ別ファイルにしてみます。</p>

<h2>RbVmomiスクリプト</h2>

<p>で、スクリプトはこんな感じになりました。</p>

<div><script src='https://gist.github.com/4054887.js?file='></script>
<noscript><pre><code>#!/usr/bin/ruby

require 'rubygems'  
require 'rbvmomi'
require 'pp'


filepath = &quot;/tmp/vsphere/&quot;

begin
vim = RbVmomi::VIM.connect :host =&gt; ARGV[0], :user =&gt; ARGV[1], :password =&gt; ARGV[2], :insecure =&gt; true
rescue =&gt; exc
p exc
exit
end

#
# cennect datacenter
#
begin
dc = vim.serviceInstance.find_datacenter
rescue =&gt; exc
p exc
exit
end

#
# get Host state
#

host = dc.hostFolder.children.first.host.grep(RbVmomi::VIM::HostSystem).each do |h|

host = h.name.gsub(/:/,&quot;-&quot;)
begin
hfile = open(filepath + &quot;h_&quot; + host, &quot;w&quot;)
rescue =&gt; exc
p exc
exit
end
hfile.print &quot;host-Hostname:&quot;, h.name, &quot;\n&quot;
hfile.print &quot;host-Product:&quot;, h.summary.config.product.fullName, &quot;\n&quot;
hfile.print &quot;host-HardwareMode:&quot;, h.summary.hardware.model, &quot;\n&quot;
hfile.print &quot;host-CPUModel:&quot;, h.summary.hardware.cpuModel, &quot;\n&quot;
hfile.print &quot;host-CPUMHz:&quot;, h.summary.hardware.cpuMhz, &quot;\n&quot;
hfile.print &quot;host-CPUCore:&quot;, h.summary.hardware.numCpuCores, &quot;\n&quot;
hfile.print &quot;host-CPUUsage:&quot;, h.summary.quickStats.overallCpuUsage, &quot;\n&quot;
hfile.print &quot;host-TotalMemorySize:&quot;, h.summary.hardware.memorySize/1024/1024, &quot;\n&quot;
hfile.print &quot;host-MemoryUsage:&quot;, h.summary.quickStats.overallMemoryUsage, &quot;\n&quot;
hfile.print &quot;host-PowerState:&quot;, h.summary.runtime.powerState, &quot;\n&quot;
hfile.print &quot;host-MaintenanceMode:&quot;, h.summary.runtime.inMaintenanceMode, &quot;\n&quot;
   hfile.print &quot;host-Uptime:&quot;, h.summary.quickStats.uptime, &quot;\n&quot;
hfile.close
end

#
# get Datastore status
#
datastore = dc.datastore.grep(RbVmomi::VIM::Datastore).each do |d|
ds = d.name.gsub(/:/,&quot;-&quot;)
begin
dfile = open(filepath + &quot;d_&quot; + ds, &quot;w&quot;)
rescue =&gt; exc
p exc
exit
end
dfile.print &quot;ds-Name:&quot;, d.name, &quot;\n&quot;
dfile.print &quot;ds-Capacity:&quot;, d.summary.capacity, &quot;\n&quot;
dfile.print &quot;ds-FreeSpace:&quot;, d.summary.freeSpace, &quot;\n&quot;
dfile.print &quot;ds-VM:&quot;
vm = d.vm.grep(RbVmomi::VIM::VirtualMachine).each do |v|
dfile.print &quot;\&quot;&quot;, v.name, &quot;\&quot;&quot;, &quot; &quot;
end
dfile.print &quot;\n&quot;
dfile.close
end

#
# get VirtualMachin status
#
vs = dc.vmFolder.childEntity.grep(RbVmomi::VIM::VirtualMachine).each do |v|
vm = v.name.gsub(/:/,&quot;-&quot;)
begin
vfile = open(filepath + &quot;v_&quot; + vm, &quot;w&quot;)
rescue
p exc
exit
end
vfile.print &quot;vm-Name:&quot;, v.name, &quot;\n&quot;
vfile.print &quot;vm-ESXi:&quot;, v.runtime.host.name, &quot;\n&quot;
vfile.print &quot;vm-powerState:&quot;, v.summary.runtime.powerState, &quot;\n&quot;
vfile.print &quot;vm-guestFullName:&quot;, v.summary.guest.guestFullName, &quot;\n&quot;
vfile.print &quot;vm-HostName:&quot;, v.summary.guest.hostName, &quot;\n&quot;
vfile.print &quot;vm-IPAddress:&quot;, v.summary.guest.ipAddress, &quot;\n&quot;
vfile.print &quot;vm-VMwareTools:&quot;, v.summary.guest.toolsStatus, &quot;\n&quot;
vfile.print &quot;vm-maxCpuUsage:&quot;, v.summary.runtime.maxCpuUsage, &quot;\n&quot;
vfile.print &quot;vm-numCpu:&quot;, v.summary.config.numCpu, &quot;\n&quot;
vfile.print &quot;vm-overallCpuUsage:&quot;, v.summary.quickStats.overallCpuUsage, &quot;\n&quot;
vfile.print &quot;vm-memorySizeMB:&quot;, v.summary.config.memorySizeMB, &quot;\n&quot;
vfile.print &quot;vm-hostMemoryUsage:&quot;, v.summary.quickStats.hostMemoryUsage, &quot;\n&quot;
vfile.print &quot;vm-guestMemoryUsage:&quot;, v.summary.quickStats.guestMemoryUsage, &quot;\n&quot;
vfile.print &quot;vm-UncommittedStorage:&quot;, v.summary.storage.uncommitted, &quot;\n&quot;
vfile.print &quot;vm-UsedStorage:&quot;, v.summary.storage.committed, &quot;\n&quot;
vfile.print &quot;vm-UnsharedStorage:&quot;, v.summary.storage.unshared, &quot;\n&quot;
vfile.print &quot;vm-Uptime:&quot;, v.summary.quickStats.uptimeSeconds, &quot;\n&quot;
vfile.close
end

puts 0</code></pre></noscript></div>


<p>/tmp/vsphere にファイルを保存するのdで、zabbixの実行ユーザに書き込み権を与えておきます。</p>

<pre>chown zabbix:zabbix /var/vsphere</pre>


<p>引数にvCenter(or ESXi)のIPアドレス、ユーザ名、パスワードを指定して実行します。</p>

<pre>su -u zabbix rbvmomi-zabbix.rb 192.168.1.1 root password</pre>


<p>成功すれば、/tmp/vspere以下にESXi、データストア、VMごとのファイルができます。</p>

<h2>Zabbix設定</h2>

<p>次はZabbix側です。</p>

<p>まず、APIからのデータ取得は結構時間がかかるので、サーバ側、エージェント側両方のタイムアウトを30秒にして、再起動しておきます。</p>

<ul>
<li>/etc/zabbix/zabbix_server.conf</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Timeout</span><span class="o">=</span><span class="mi">30</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>/etc/zabbix/zabbix_agentd.conf</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">TImeout</span><span class="o">=</span><span class="mi">30</span>
</span></code></pre></td></tr></table></div></figure>


<p>テンプレートをインポートします。</p>

<ul>
<li><a href="https://github.com/taishin/rbvmoni-zabbix/blob/master/Template-vCenter.xml">vCenter用</a></li>
<li><a href="https://github.com/taishin/rbvmoni-zabbix/blob/master/Template-vSphere-ESXi.xml">ESXi用</a></li>
<li><a href="https://github.com/taishin/rbvmoni-zabbix/blob/master/Template-vSphere-Datastore.xml">データストア用</a></li>
<li><a href="https://github.com/taishin/rbvmoni-zabbix/blob/master/Template-vSphere-VM.xml">VM用</a></li>
</ul>


<h2>Zabbix UserParameterの設定</h2>

<p>下記のファイルを/etc/zabbix/zabbix_agentd.d/以下に保存します。</p>

<ul>
<li><a href="https://github.com/taishin/rbvmoni-zabbix/blob/master/userparameter_vsphere-vm.conf">userparameter_vsphere-vm.conf</a></li>
</ul>


<h2>vCenterの登録</h2>

<p>Zabbixにホストとして、vCenterを登録します。</p>

<pre>
ホスト
- ホスト名：適当
- エージェントのIPアドレス：127.0.0.1
- ポート：10050

テンプレート
- インポートしたvCenter用テンプレート

マクロ
- {$HOST} : IPアドレス
- {$USERNAME} : ユーザ名
- {$PASSWORD} ： パスワード
</pre>


<p>これで、スクリプトが設定した間隔で実行されます。</p>

<h2>ESXi、データストア、VMの登録</h2>

<pre>
ホスト
- ホスト：各登録名
- IPアドレス：127.0.0.1
- ポート：10050

テンプレート
- インポートしたESXi、データストア、VM用テンプレート
</pre>


<p>名前に「:」が含まれていると、登録できないので、「-」に変換して登録してください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bind + OpenLDAP]]></title>
    <link href="http://taishin.github.com/blog/2012/11/04/bind-plus-openldap/"/>
    <updated>2012-11-04T10:18:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/04/bind-plus-openldap</id>
    <content type="html"><![CDATA[<p>BindのバックエンドDBをOpenLDAPにしてみる</p>

<p>OSはCentOS6.3</p>

<ul>
<li>bind-sdbをインストールする</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo yum install bind-sdb</span></code></pre></td></tr></table></div></figure>


<ul>
<li>DNSzoneスキーマを組み込む</li>
</ul>


<p>/etc/openldap/slapd.conf に追加</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>include /etc/openldap/schema/dnszone.schema</span></code></pre></td></tr></table></div></figure>


<ul>
<li>構成はこんな感じ</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root - Hosts --- example.com ------------- @(SOA NS)
</span><span class='line'>              |                         |- server1(A)
</span><span class='line'>              |                         |- www(CNAME)
</span><span class='line'>              |
</span><span class='line'>              |- 1.168.192.in-addr.arpa -- @(SOA NS)
</span><span class='line'>                                        |- 1(PTR)</span></code></pre></td></tr></table></div></figure>


<p>LDIF</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dn: ou=Hosts,dc=example,dc=com
</span><span class='line'>objectclass: organizationalUnit
</span><span class='line'>objectclass: top
</span><span class='line'>ou: Hosts
</span><span class='line'>
</span><span class='line'># 正引き
</span><span class='line'>dn: ou=example.com,ou=Hosts,dc=example,dc=com
</span><span class='line'>objectclass: organizationalUnit
</span><span class='line'>objectclass: top
</span><span class='line'>ou: example.com
</span><span class='line'>
</span><span class='line'>dn: relativeDomainName=@,ou=example.com,ou=Hosts,dc=example,dc=com
</span><span class='line'>dnsclass: IN
</span><span class='line'>dnsttl: 86400
</span><span class='line'>nsrecord: ns.example.com.
</span><span class='line'>objectclass: dNSZone
</span><span class='line'>objectclass: top
</span><span class='line'>relativedomainname: @
</span><span class='line'>soarecord: ns.example.com. root.example.com. 2012110303 28800 14400 3600000 
</span><span class='line'> 86400
</span><span class='line'>zonename: example.com
</span><span class='line'>
</span><span class='line'>dn: relativeDomainName=server1,ou=example.com,ou=Hosts,dc=example,dc=com
</span><span class='line'>arecord: 192.168.1.1
</span><span class='line'>dnsclass: IN
</span><span class='line'>dnsttl: 3600
</span><span class='line'>objectclass: dNSZone
</span><span class='line'>objectclass: top
</span><span class='line'>relativedomainname: server1
</span><span class='line'>zonename: example.com
</span><span class='line'>
</span><span class='line'>dn: relativeDomainName=www,ou=example.com,ou=Hosts,dc=example,dc=com
</span><span class='line'>cnamerecord: server1
</span><span class='line'>dnsclass: IN
</span><span class='line'>dnsttl: 3600
</span><span class='line'>objectclass: dNSZone
</span><span class='line'>objectclass: top
</span><span class='line'>relativedomainname: www
</span><span class='line'>zonename: example.com
</span><span class='line'>
</span><span class='line'>#逆引き
</span><span class='line'>dn: ou=1.168.192.in-addr.arpa,ou=Hosts,dc=example,dc=com
</span><span class='line'>objectclass: organizationalUnit
</span><span class='line'>objectclass: top
</span><span class='line'>ou: 1.168.192.in-addr.arpa
</span><span class='line'>
</span><span class='line'>dn: relativeDomainName=@,ou=1.168.192.in-addr.arpa,ou=Hosts,dc=example,dc=com
</span><span class='line'>arecord: 255.255.255.0
</span><span class='line'>dnsclass: IN
</span><span class='line'>dnsttl: 86400
</span><span class='line'>nsrecord: ns.example.com.
</span><span class='line'>objectclass: dNSZone
</span><span class='line'>objectclass: top
</span><span class='line'>ptrrecord: example.com.
</span><span class='line'>relativedomainname: @
</span><span class='line'>soarecord: ns.example.com. root.example.com. 2012110302 28800 14400 3600000 
</span><span class='line'> 86400
</span><span class='line'>zonename: 1.168.192.in-addr.arpa
</span><span class='line'>
</span><span class='line'>dn: relativeDomainName=1,ou=1.168.192.in-addr.arpa,ou=Hosts,dc=example,dc=com
</span><span class='line'>dnsclass: IN
</span><span class='line'>dnsttl: 3600
</span><span class='line'>objectclass: dNSZone
</span><span class='line'>objectclass: top
</span><span class='line'>ptrrecord: server1.example.com.
</span><span class='line'>relativedomainname: 1
</span><span class='line'>zonename: 1.168.192.in-addr.arpa</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressをSublime Text 2で操作]]></title>
    <link href="http://taishin.github.com/blog/2012/11/03/octopress/"/>
    <updated>2012-11-03T14:47:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/03/octopress</id>
    <content type="html"><![CDATA[<p><a href="http://blueplanet.github.com/blog/2012/10/16/sublime-text-2-octopress/">http://blueplanet.github.com/blog/2012/10/16/sublime-text-2-octopress/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctpressにComment追加]]></title>
    <link href="http://taishin.github.com/blog/2012/11/03/octpressnicommentzhui-jia/"/>
    <updated>2012-11-03T14:34:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/03/octpressnicommentzhui-jia</id>
    <content type="html"><![CDATA[<p>Discusに登録しないといけないらしい。</p>

<ul>
<li><a href="http://cat.hackingisbelieving.org/blog/2012/08/14/how-to-install-octopress-on-your-github-pages/">http://cat.hackingisbelieving.org/blog/2012/08/14/how-to-install-octopress-on-your-github-pages/</a></li>
<li><a href="http://qiita.com/items/70576232d9d317183683">http://qiita.com/items/70576232d9d317183683</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudStackにWindowsテンプレートを作成]]></title>
    <link href="http://taishin.github.com/blog/2012/11/02/cloudstackniwindowstenpuretowozuo-cheng/"/>
    <updated>2012-11-02T23:54:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/02/cloudstackniwindowstenpuretowozuo-cheng</id>
    <content type="html"><![CDATA[<p>Cloudstack＋KVMの環境に普通にWindowsを追加すると、NICがe1000、DiskがIDEになってしまう。</p>

<p>それをVirtioにする方法</p>

<p>Virtioを使う場合は、OSの種類をPV-enabledのものしないといけないらしい。</p>

<p><a href="https://svn.apache.org/repos/asf/incubator/cloudstack/docsite/html/docs/en-US/Apache_CloudStack/4.0.0-incubating/html-single/Admin_Guide/index.html">CloudStack Administrator&#8217;s Guide</a></p>

<blockquote><p>(KVM only) If you choose an OS that is PV-enabled, the VMs created from this ISO will have a SCSI (virtio) root disk. If the OS is not PV-enabled, the VMs will have an IDE root disk. The PV-enabled types are:</p></blockquote>

<ol>
<li><p>WindowsOSのISOを追加するときに、OSの種類をWindows PVにする</p></li>
<li><p>そのISOでインスタンスをつくると、インスタンスのOSの種類もWindows PVになる</p></li>
<li><p>起動してもVirtioのドライバがないので、ディスクが見えない。
一旦、Windows OSのISOをデタッチして、virtio-win-0.1-30.isoををアタッチする。<br>
<a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/">http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/</a></p></li>
<li><p>Virtioのドライバをインストールするとディスクが見えてくるので、
再度WindowsのISOアタッチして、インストールできる。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressテーマ]]></title>
    <link href="http://taishin.github.com/blog/2012/11/02/octopresstema/"/>
    <updated>2012-11-02T23:49:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/02/octopresstema</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github+Octopress導入]]></title>
    <link href="http://taishin.github.com/blog/2012/11/02/tou-gao-tesuto/"/>
    <updated>2012-11-02T22:19:00+09:00</updated>
    <id>http://taishin.github.com/blog/2012/11/02/tou-gao-tesuto</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://octopress.org/docs/">http://octopress.org/docs/</a></li>
<li><a href="http://www.hisasann.com/blog/2012/10/06/first-post/">http://www.hisasann.com/blog/2012/10/06/first-post/</a></li>
<li><a href="http://shogo82148.github.com/blog/2012/03/21/test/">http://shogo82148.github.com/blog/2012/03/21/test/</a></li>
<li><a href="http://mizchi.github.com/blog/2012/09/22/octopress-memo/">http://mizchi.github.com/blog/2012/09/22/octopress-memo/</a>

<ul>
<li>zshの問題とかも</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
